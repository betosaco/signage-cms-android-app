// Generated by view binder compiler. Do not edit!
package com.matmax.signage.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.matmax.signage.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPairingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imageViewLogo;

  @NonNull
  public final LinearLayout rootLinearLayout;

  @NonNull
  public final TextView textViewInstructions;

  @NonNull
  public final TextView textViewPairingCode;

  private ActivityPairingBinding(@NonNull LinearLayout rootView, @NonNull ImageView imageViewLogo,
      @NonNull LinearLayout rootLinearLayout, @NonNull TextView textViewInstructions,
      @NonNull TextView textViewPairingCode) {
    this.rootView = rootView;
    this.imageViewLogo = imageViewLogo;
    this.rootLinearLayout = rootLinearLayout;
    this.textViewInstructions = textViewInstructions;
    this.textViewPairingCode = textViewPairingCode;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPairingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPairingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pairing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPairingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageViewLogo;
      ImageView imageViewLogo = ViewBindings.findChildViewById(rootView, id);
      if (imageViewLogo == null) {
        break missingId;
      }

      LinearLayout rootLinearLayout = (LinearLayout) rootView;

      id = R.id.textViewInstructions;
      TextView textViewInstructions = ViewBindings.findChildViewById(rootView, id);
      if (textViewInstructions == null) {
        break missingId;
      }

      id = R.id.textViewPairingCode;
      TextView textViewPairingCode = ViewBindings.findChildViewById(rootView, id);
      if (textViewPairingCode == null) {
        break missingId;
      }

      return new ActivityPairingBinding((LinearLayout) rootView, imageViewLogo, rootLinearLayout,
          textViewInstructions, textViewPairingCode);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
