//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.matmax.signage.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.obj
import com.matmax.signage.graphql.GetRemoteCommandsQuery
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetRemoteCommandsQuery_ResponseAdapter {
  public object Data : Adapter<GetRemoteCommandsQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("remoteCommands")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRemoteCommandsQuery.Data {
      var _remoteCommands: List<GetRemoteCommandsQuery.RemoteCommand>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _remoteCommands = RemoteCommand.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRemoteCommandsQuery.Data(
        remoteCommands = _remoteCommands!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRemoteCommandsQuery.Data,
    ): Unit {
      writer.name("remoteCommands")
      RemoteCommand.obj().list().toJson(writer, customScalarAdapters, value.remoteCommands)
    }
  }

  public object RemoteCommand : Adapter<GetRemoteCommandsQuery.RemoteCommand> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "type", "payload", "issuedAt")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetRemoteCommandsQuery.RemoteCommand {
      var _id: String? = null
      var _type: String? = null
      var _payload: String? = null
      var _issuedAt: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _type = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _payload = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          3 -> _issuedAt = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetRemoteCommandsQuery.RemoteCommand(
        id = _id!!,
        type = _type!!,
        payload = _payload,
        issuedAt = _issuedAt
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetRemoteCommandsQuery.RemoteCommand,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("type")
      StringAdapter.toJson(writer, customScalarAdapters, value.type)

      writer.name("payload")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.payload)

      writer.name("issuedAt")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.issuedAt)
    }
  }
}
