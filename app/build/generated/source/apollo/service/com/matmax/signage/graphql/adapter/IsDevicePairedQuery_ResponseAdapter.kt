//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.matmax.signage.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.BooleanAdapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.obj
import com.matmax.signage.graphql.IsDevicePairedQuery
import kotlin.Boolean
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object IsDevicePairedQuery_ResponseAdapter {
  public object Data : Adapter<IsDevicePairedQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("isDevicePaired")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IsDevicePairedQuery.Data {
      var _isDevicePaired: IsDevicePairedQuery.IsDevicePaired? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _isDevicePaired = IsDevicePaired.obj().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return IsDevicePairedQuery.Data(
        isDevicePaired = _isDevicePaired!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IsDevicePairedQuery.Data,
    ): Unit {
      writer.name("isDevicePaired")
      IsDevicePaired.obj().toJson(writer, customScalarAdapters, value.isDevicePaired)
    }
  }

  public object IsDevicePaired : Adapter<IsDevicePairedQuery.IsDevicePaired> {
    public val RESPONSE_NAMES: List<String> = listOf("paired", "deviceId", "message")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        IsDevicePairedQuery.IsDevicePaired {
      var _paired: Boolean? = null
      var _deviceId: String? = null
      var _message: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _paired = BooleanAdapter.fromJson(reader, customScalarAdapters)
          1 -> _deviceId = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _message = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return IsDevicePairedQuery.IsDevicePaired(
        paired = _paired!!,
        deviceId = _deviceId,
        message = _message
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: IsDevicePairedQuery.IsDevicePaired,
    ): Unit {
      writer.name("paired")
      BooleanAdapter.toJson(writer, customScalarAdapters, value.paired)

      writer.name("deviceId")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.deviceId)

      writer.name("message")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.message)
    }
  }
}
