//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.8.2'.
//
package com.matmax.signage.graphql.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableIntAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import com.matmax.signage.graphql.GetPlaylistQuery
import kotlin.Int
import kotlin.String
import kotlin.Unit
import kotlin.collections.List

public object GetPlaylistQuery_ResponseAdapter {
  public object Data : Adapter<GetPlaylistQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("playlist")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetPlaylistQuery.Data {
      var _playlist: GetPlaylistQuery.Playlist? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _playlist = Playlist.obj().nullable().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetPlaylistQuery.Data(
        playlist = _playlist
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetPlaylistQuery.Data,
    ): Unit {
      writer.name("playlist")
      Playlist.obj().nullable().toJson(writer, customScalarAdapters, value.playlist)
    }
  }

  public object Playlist : Adapter<GetPlaylistQuery.Playlist> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "items")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetPlaylistQuery.Playlist {
      var _id: String? = null
      var _items: List<GetPlaylistQuery.Item>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _items = Item.obj().list().fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetPlaylistQuery.Playlist(
        id = _id!!,
        items = _items!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetPlaylistQuery.Playlist,
    ): Unit {
      writer.name("id")
      StringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("items")
      Item.obj().list().toJson(writer, customScalarAdapters, value.items)
    }
  }

  public object Item : Adapter<GetPlaylistQuery.Item> {
    public val RESPONSE_NAMES: List<String> = listOf("type", "url", "duration")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetPlaylistQuery.Item {
      var _type: String? = null
      var _url: String? = null
      var _duration: Int? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _type = StringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _url = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _duration = NullableIntAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetPlaylistQuery.Item(
        type = _type!!,
        url = _url!!,
        duration = _duration
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetPlaylistQuery.Item,
    ): Unit {
      writer.name("type")
      StringAdapter.toJson(writer, customScalarAdapters, value.type)

      writer.name("url")
      StringAdapter.toJson(writer, customScalarAdapters, value.url)

      writer.name("duration")
      NullableIntAdapter.toJson(writer, customScalarAdapters, value.duration)
    }
  }
}
